{"ast":null,"code":"var _jsxFileName = \"D:\\\\project\\\\broadcasting channel\\\\client\\\\broadcasting\\\\src\\\\pages\\\\signup.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport useSignup from '../hooks/useSignup';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Signup() {\n  _s();\n  const [Username, setUsername] = useState('');\n  const [password, setpassword] = useState('');\n  const {\n    signup,\n    error\n  } = useSignup();\n  const navigate = useNavigate();\n  const handleSubmit = async e => {\n    e.prevent.default();\n    await signup(Username, password);\n    if (error === '') {\n      navigate('/chat');\n    } else {}\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        for: \"username\",\n        children: \"Username\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        placeholder: \"Username\",\n        type: \"text\",\n        name: \"username\",\n        value: Username,\n        onChange: e => setUsername(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        for: \"password\",\n        children: \"password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        placeholder: \"Username\",\n        type: \"password\",\n        name: \"password\",\n        value: password,\n        onChange: e => setpassword(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"bg-white\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n}\n_s(Signup, \"Aq+qr//bFJ1IxzKa0C23tgnNhcY=\", false, function () {\n  return [useSignup, useNavigate];\n});\n_c = Signup;\nexport default Signup;\nvar _c;\n$RefreshReg$(_c, \"Signup\");","map":{"version":3,"names":["React","useState","useSignup","useNavigate","jsxDEV","_jsxDEV","Fragment","_Fragment","Signup","_s","Username","setUsername","password","setpassword","signup","error","navigate","handleSubmit","e","prevent","default","children","onSubmit","for","fileName","_jsxFileName","lineNumber","columnNumber","placeholder","type","name","value","onChange","target","className","_c","$RefreshReg$"],"sources":["D:/project/broadcasting channel/client/broadcasting/src/pages/signup.jsx"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport useSignup from '../hooks/useSignup'\r\nimport {useNavigate } from 'react-router-dom'\r\n\r\nfunction Signup(){\r\n\r\n    const [Username, setUsername] = useState('');\r\n    const [password, setpassword] = useState('');\r\n    const {signup,error} = useSignup();\r\n\r\n    const navigate = useNavigate();\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.prevent.default();\r\n        await signup(Username, password);\r\n        if(error === ''){\r\n            navigate('/chat')\r\n        } else{\r\n        }\r\n    }\r\n\r\n    return(\r\n        <>\r\n            <form onSubmit={handleSubmit}>\r\n                <label for=\"username\" >Username</label>\r\n                <input placeholder=\"Username\" type=\"text\" name=\"username\" value={Username} onChange={(e) => setUsername(e.target.value)} />\r\n                <label for=\"password\">password</label>\r\n                <input placeholder=\"Username\" type = \"password\" name=\"password\" value={password} onChange={(e) => setpassword(e.target.value)} />\r\n                <button className=\"bg-white\">Submit</button>\r\n            </form>\r\n        </>\r\n    )\r\n}\r\n\r\n\r\nexport default Signup;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,SAAS,MAAM,oBAAoB;AAC1C,SAAQC,WAAW,QAAQ,kBAAkB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAE7C,SAASC,MAAMA,CAAA,EAAE;EAAAC,EAAA;EAEb,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACW,QAAQ,EAAEC,WAAW,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM;IAACa,MAAM;IAACC;EAAK,CAAC,GAAGb,SAAS,CAAC,CAAC;EAElC,MAAMc,QAAQ,GAAGb,WAAW,CAAC,CAAC;EAE9B,MAAMc,YAAY,GAAG,MAAOC,CAAC,IAAK;IAC9BA,CAAC,CAACC,OAAO,CAACC,OAAO,CAAC,CAAC;IACnB,MAAMN,MAAM,CAACJ,QAAQ,EAAEE,QAAQ,CAAC;IAChC,IAAGG,KAAK,KAAK,EAAE,EAAC;MACZC,QAAQ,CAAC,OAAO,CAAC;IACrB,CAAC,MAAK,CACN;EACJ,CAAC;EAED,oBACIX,OAAA,CAAAE,SAAA;IAAAc,QAAA,eACIhB,OAAA;MAAMiB,QAAQ,EAAEL,YAAa;MAAAI,QAAA,gBACzBhB,OAAA;QAAOkB,GAAG,EAAC,UAAU;QAAAF,QAAA,EAAE;MAAQ;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eACvCtB,OAAA;QAAOuB,WAAW,EAAC,UAAU;QAACC,IAAI,EAAC,MAAM;QAACC,IAAI,EAAC,UAAU;QAACC,KAAK,EAAErB,QAAS;QAACsB,QAAQ,EAAGd,CAAC,IAAKP,WAAW,CAACO,CAAC,CAACe,MAAM,CAACF,KAAK;MAAE;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAC3HtB,OAAA;QAAOkB,GAAG,EAAC,UAAU;QAAAF,QAAA,EAAC;MAAQ;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eACtCtB,OAAA;QAAOuB,WAAW,EAAC,UAAU;QAACC,IAAI,EAAG,UAAU;QAACC,IAAI,EAAC,UAAU;QAACC,KAAK,EAAEnB,QAAS;QAACoB,QAAQ,EAAGd,CAAC,IAAKL,WAAW,CAACK,CAAC,CAACe,MAAM,CAACF,KAAK;MAAE;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACjItB,OAAA;QAAQ6B,SAAS,EAAC,UAAU;QAAAb,QAAA,EAAC;MAAM;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC1C;EAAC,gBACT,CAAC;AAEX;AAAClB,EAAA,CA5BQD,MAAM;EAAA,QAIYN,SAAS,EAEfC,WAAW;AAAA;AAAAgC,EAAA,GANvB3B,MAAM;AA+Bf,eAAeA,MAAM;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}