{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState } from 'react';\nimport { useAuthContext } from './useAuthContext';\nexport const useSignup = () => {\n  _s();\n  const [error, setError] = useState(null);\n  const {\n    dispatch\n  } = useAuthContext();\n  const signup = async (email, password) => {\n    setError(null);\n    const response = await fetch('/api/user/signup', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        email,\n        password\n      })\n    });\n    const json = await response.json();\n    if (!response.ok) {\n      setError(json.error);\n    }\n    if (response.ok) {\n      // save the user to local storage\n      localStorage.setItem('user', JSON.stringify(json));\n\n      // update the auth context\n      dispatch({\n        type: 'LOGIN',\n        payload: json\n      });\n\n      // update loading state\n    }\n  };\n  return {\n    signup,\n    error\n  };\n};\n_s(useSignup, \"vwXhj4Sui1pPM0q1ghsaXQ611lI=\", false, function () {\n  return [useAuthContext];\n});","map":{"version":3,"names":["useState","useAuthContext","useSignup","_s","error","setError","dispatch","signup","email","password","response","fetch","method","headers","body","JSON","stringify","json","ok","localStorage","setItem","type","payload"],"sources":["D:/project/broadcasting channel/client/broadcasting/src/hooks/useSignup.js"],"sourcesContent":["import { useState } from 'react'\r\nimport { useAuthContext } from './useAuthContext'\r\n\r\nexport const useSignup = () => {\r\n  const [error, setError] = useState(null)\r\n  \r\n  const { dispatch } = useAuthContext()\r\n\r\n  const signup = async (email, password) => {\r\n   \r\n    setError(null)\r\n\r\n    const response = await fetch('/api/user/signup', {\r\n      method: 'POST',\r\n      headers: {'Content-Type': 'application/json'},\r\n      body: JSON.stringify({ email, password })\r\n    })\r\n    const json = await response.json()\r\n\r\n    if (!response.ok) {\r\n     \r\n      setError(json.error)\r\n    }\r\n    if (response.ok) {\r\n      // save the user to local storage\r\n      localStorage.setItem('user', JSON.stringify(json))\r\n\r\n      // update the auth context\r\n      dispatch({type: 'LOGIN', payload: json})\r\n\r\n      // update loading state\r\n      \r\n    }\r\n  }\r\n\r\n  return { signup,  error }\r\n}"],"mappings":";AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,SAASC,cAAc,QAAQ,kBAAkB;AAEjD,OAAO,MAAMC,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC7B,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGL,QAAQ,CAAC,IAAI,CAAC;EAExC,MAAM;IAAEM;EAAS,CAAC,GAAGL,cAAc,CAAC,CAAC;EAErC,MAAMM,MAAM,GAAG,MAAAA,CAAOC,KAAK,EAAEC,QAAQ,KAAK;IAExCJ,QAAQ,CAAC,IAAI,CAAC;IAEd,MAAMK,QAAQ,GAAG,MAAMC,KAAK,CAAC,kBAAkB,EAAE;MAC/CC,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QAAC,cAAc,EAAE;MAAkB,CAAC;MAC7CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QAAER,KAAK;QAAEC;MAAS,CAAC;IAC1C,CAAC,CAAC;IACF,MAAMQ,IAAI,GAAG,MAAMP,QAAQ,CAACO,IAAI,CAAC,CAAC;IAElC,IAAI,CAACP,QAAQ,CAACQ,EAAE,EAAE;MAEhBb,QAAQ,CAACY,IAAI,CAACb,KAAK,CAAC;IACtB;IACA,IAAIM,QAAQ,CAACQ,EAAE,EAAE;MACf;MACAC,YAAY,CAACC,OAAO,CAAC,MAAM,EAAEL,IAAI,CAACC,SAAS,CAACC,IAAI,CAAC,CAAC;;MAElD;MACAX,QAAQ,CAAC;QAACe,IAAI,EAAE,OAAO;QAAEC,OAAO,EAAEL;MAAI,CAAC,CAAC;;MAExC;IAEF;EACF,CAAC;EAED,OAAO;IAAEV,MAAM;IAAGH;EAAM,CAAC;AAC3B,CAAC;AAAAD,EAAA,CAjCYD,SAAS;EAAA,QAGCD,cAAc;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}